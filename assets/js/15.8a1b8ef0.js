(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{347:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js-面向对象的-3-大特性-封装-继承-多态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-面向对象的-3-大特性-封装-继承-多态","aria-hidden":"true"}},[t._v("#")]),t._v(" js 面向对象的 3 大特性----封装,继承,多态")]),t._v(" "),a("h2",{attrs:{id:"目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录","aria-hidden":"true"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),a("ol",[a("li",[a("p",[a("a",{attrs:{href:"#%E5%B0%81%E8%A3%85"}},[t._v("封装")]),a("br"),t._v("\n1.1 "),a("a",{attrs:{href:"#ES6-%E5%89%8D"}},[t._v("ES6 前")]),a("br"),t._v("\n1.2 "),a("a",{attrs:{href:"#ES6"}},[t._v("ES6")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"#%E7%BB%A7%E6%89%BF"}},[t._v("继承")]),a("br"),t._v("\n2.1 "),a("a",{attrs:{href:"#%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%BB%A7%E6%89%BF"}},[t._v("原型链继承")]),a("br"),t._v("\n2.2 "),a("a",{attrs:{href:"#%E6%9E%84%E9%80%A0%E7%BB%A7%E6%89%BF"}},[t._v("构造继承")]),a("br"),t._v("\n2.3 "),a("a",{attrs:{href:"#%E7%BB%84%E5%90%88%E7%BB%A7%E6%89%BF"}},[t._v("组合继承")]),a("br"),t._v("\n2.4 "),a("a",{attrs:{href:"#%E5%AF%84%E7%94%9F%E7%BB%84%E5%90%88%E7%BB%A7%E6%89%BF"}},[t._v("寄生组合继承")]),a("br"),t._v("\n2.5 "),a("a",{attrs:{href:"#%E5%8E%9F%E5%9E%8B%E5%BC%8F%E7%BB%A7%E6%89%BF"}},[t._v("原型式继承")]),a("br"),t._v("\n2.6 "),a("a",{attrs:{href:"#%E5%AF%84%E7%94%9F%E5%BC%8F%E7%BB%A7%E6%89%BF"}},[t._v("寄生式继承")]),a("br"),t._v("\n2.7 "),a("a",{attrs:{href:"#%E6%B7%B7%E5%85%A5%E6%96%B9%E5%BC%8F%E7%BB%A7%E6%89%BF%E5%A4%9A%E4%B8%AA%E5%AF%B9%E8%B1%A1"}},[t._v("混入方式继承多个对象")]),a("br"),t._v("\n2.8 "),a("a",{attrs:{href:"#class-%E7%BB%A7%E6%89%BF"}},[t._v("class 继承")]),a("br"),t._v("\n2.9 "),a("a",{attrs:{href:"#%E9%99%84"}},[t._v("附")])])])]),t._v(" "),a("h2",{attrs:{id:"封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#封装","aria-hidden":"true"}},[t._v("#")]),t._v(" 封装")]),t._v(" "),a("blockquote",[a("p",[t._v("把客观事物封装成抽象的类，隐藏属性和方法，仅对外公开接口")])]),t._v(" "),a("h3",{attrs:{id:"es6-前"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-前","aria-hidden":"true"}},[t._v("#")]),t._v(" ES6 前")]),t._v(" "),a("ul",[a("li",[t._v("方法: 构造函数")]),t._v(" "),a("li",[t._v("概念\n"),a("ul",[a("li",[t._v("私有属性,公有属性,静态属性区别\n"),a("ul",[a("li",[t._v("私有属性和方法：只能在构造函数内访问不能被外部所访问(在构造函数内使用声明符声明的属性)")]),t._v(" "),a("li",[t._v("公有属性和方法(或实例方法)：对象外可以访问到对象内的属性和方法(在构造函数内使用 this 设置，或者设置在构造函数原型对象上比如 Object.prototype.xxx)")]),t._v(" "),a("li",[t._v("静态属性和方法：定义在构造函数上的方法(比如 Cat.xxx)，不需要实例就可以调用(例如 Object.assign())")])])]),t._v(" "),a("li",[t._v("实例对象上的属性和构造函数原型上的属性\n"),a("ul",[a("li",[t._v("定义在构造函数原型对象上的属性和方法虽然不能直接表现在实例对象上，但是实例对象却可以访问或者调用它们。")]),t._v(" "),a("li",[t._v("当访问一个对象的属性 / 方法时，它不仅仅在该对象上查找，还会查找该对象的原型，以及该对象的原型的原型，一层一层向上查找，直到找到一个名字匹配的属性 / 方法或到达原型链的末尾（null）。")])])]),t._v(" "),a("li",[t._v("遍历实例对象属性的三种方法:\n"),a("ul",[a("li",[t._v("使用 for...in...能获取到实例对象自身的属性和原型链上的属性")]),t._v(" "),a("li",[t._v("使用 Object.keys()和 Object.getOwnPropertyNames()只能获取实例对象自身的属性")]),t._v(" "),a("li",[t._v("可以通过.hasOwnProperty()方法传入属性名来判断一个属性是不是实例自身的属性")])])])])])]),t._v(" "),a("h3",{attrs:{id:"es6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6","aria-hidden":"true"}},[t._v("#")]),t._v(" ES6")]),t._v(" "),a("ul",[a("li",[t._v("方法: class 声明")]),t._v(" "),a("li",[t._v("概念:\n"),a("ul",[a("li",[t._v("class 的基本概念：\n"),a("ul",[a("li",[t._v("当你使用 class 的时候，它会默认调用 constructor 这个函数，来接收一些参数，并构造出一个新的实例对象(this)并将它返回。")]),t._v(" "),a("li",[t._v("如果你的 class 没有定义 constructor，也会隐式生成一个 constructor 方法")])])]),t._v(" "),a("li",[t._v("class 中几种定义属性的区别：\n"),a("ul",[a("li",[t._v("在 constructor 中 var 一个变量，它只存在于 constructor 这个构造函数中( 即私有属性~方法 )")]),t._v(" "),a("li",[t._v("在 constructor 中使用 this 定义的属性和方法会被定义到实例上(公有)")]),t._v(" "),a("li",[t._v("在 class 中使用=来定义一个属性和方法，效果与第二点相同，会被定义到实例上(公有)")]),t._v(" "),a("li",[t._v("在 class 中直接定义一个方法，会被添加到原型对象 prototype 上(公有)")]),t._v(" "),a("li",[t._v("在 class 中使用了 static 修饰符定义的属性和方法被认为是静态的，被添加到类本身，不会添加到实例上(静态)")])])]),t._v(" "),a("li",[t._v("与构造函数对比\n"),a("ul",[a("li",[t._v("class 本质虽然是个函数，但是并不会像函数一样提升至作用域最顶层")]),t._v(" "),a("li",[t._v("如遇 class 中箭头函数等题目请参照构造函数来处理")]),t._v(" "),a("li",[t._v("使用 class 生成的实例对象，也会有沿着原型链查找的功能")])])])])])]),t._v(" "),a("h2",{attrs:{id:"继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#继承","aria-hidden":"true"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),a("blockquote",[a("p",[t._v("继承就是子类可以使用父类的所有功能，并且对这些功能进行扩展")])]),t._v(" "),a("h3",{attrs:{id:"原型链继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型链继承","aria-hidden":"true"}},[t._v("#")]),t._v(" 原型链继承")]),t._v(" "),a("blockquote",[a("p",[t._v("将子类的原型对象指向父类的实例")])]),t._v(" "),a("ul",[a("li",[t._v("方法: "),a("code",[t._v("Child.prototype = new Parent()")])]),t._v(" "),a("li",[t._v("优点：\n"),a("ul",[a("li",[t._v("继承了父类的模板，又继承了父类的原型对象")])])]),t._v(" "),a("li",[t._v("缺点\n"),a("ul",[a("li",[t._v("如果要给子类的原型上新增属性和方法，就必须放在 Child.prototype = new Parent()这样的语句后面")]),t._v(" "),a("li",[t._v("无法实现多继承(因为已经指定了原型对象了)")]),t._v(" "),a("li",[t._v("来自原型对象的所有属性都被共享了，这样如果不小心修改了原型对象中的引用类型属性，那么所有子类创建的实例对象都会受到影响")]),t._v(" "),a("li",[t._v("创建子类时，无法向父类构造函数传参数")])])])]),t._v(" "),a("h3",{attrs:{id:"构造继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造继承","aria-hidden":"true"}},[t._v("#")]),t._v(" 构造继承")]),t._v(" "),a("blockquote",[a("p",[t._v("在子类构造函数内部使用 call 或 apply 来调用父类构造函数")])]),t._v(" "),a("ul",[a("li",[t._v("方法: "),a("code",[t._v("function Child () {Parent.call(this, ...arguments)}")])]),t._v(" "),a("li",[t._v("优点：\n"),a("ul",[a("li",[t._v("解决了原型链继承中子类实例共享父类引用对象的问题，实现多继承，创建子类实例时，可以向父类传递参数")])])]),t._v(" "),a("li",[t._v("缺点:\n"),a("ul",[a("li",[t._v("构造继承只能继承父类的实例属性和方法，不能继承父类原型的属性和方法")]),t._v(" "),a("li",[t._v("实例并不是父类的实例，只是子类的实例")]),t._v(" "),a("li",[t._v("无法实现函数复用，每个子类都有父类实例函数的副本，影响性能")])])])]),t._v(" "),a("h3",{attrs:{id:"组合继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合继承","aria-hidden":"true"}},[t._v("#")]),t._v(" 组合继承")]),t._v(" "),a("blockquote",[a("p",[t._v("使用原型链继承来保证子类能继承到父类原型中的属性和方法 ; 使用构造继承来保证子类能继承到父类的实例属性和方法")])]),t._v(" "),a("ul",[a("li",[t._v("方法: a + b()\n"),a("ul",[a("li",[t._v("通过 call/apply 在子类构造函数内部调用父类构造函数")]),t._v(" "),a("li",[t._v("将子类构造函数的原型对象指向父类构造函数创建的一个匿名实例")]),t._v(" "),a("li",[t._v("修正子类构造函数原型对象的 constructor 属性，将它指向子类构造函数")])])]),t._v(" "),a("li",[t._v("优点\n"),a("ul",[a("li",[t._v("可以继承父类实例属性和方法，也能够继承父类原型属性和方法")]),t._v(" "),a("li",[t._v("弥补了原型链继承中引用属性共享的问题")]),t._v(" "),a("li",[t._v("可传参，可复用")])])]),t._v(" "),a("li",[t._v("缺点\n"),a("ul",[a("li",[t._v("使用组合继承时，父类构造函数会被调用两次")]),t._v(" "),a("li",[t._v("生成了两个实例，子类实例中的属性和方法会覆盖子类原型(父类实例)上的属性和方法，所以增加了不必要的内存。")]),t._v(" "),a("li",[t._v("附-constructor")]),t._v(" "),a("li",[t._v("constructor 它是构造函数原型对象中的一个属性，正常情况下它指向的是原型对象。")]),t._v(" "),a("li",[t._v("它并不会影响任何 JS 内部属性，只是用来标示一下某个实例是由哪个构造函数产生的而已。")]),t._v(" "),a("li",[t._v("如果我们使用了原型链继承或者组合继承无意间修改了 constructor 的指向，那么出于编程习惯，我们最好将它修改为正确的构造函数。")])])])]),t._v(" "),a("h3",{attrs:{id:"寄生组合继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#寄生组合继承","aria-hidden":"true"}},[t._v("#")]),t._v(" 寄生组合继承")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("Object.create")]),t._v(" 来构建子类原型,在子类构造函数内部使用 call 或 apply 来调用父类构造函数")])]),t._v(" "),a("ul",[a("li",[t._v("方法: "),a("code",[t._v("a + Object.create(Parent.prototype)")]),t._v(" "),a("ul",[a("li",[t._v("通过 call/apply 在子类构造函数内部调用父类构造函数")]),t._v(" "),a("li",[t._v("将 child 的原型对象指向通过 Object.create 创建的对象,即是父类构造函数的 prototype 对象")]),t._v(" "),a("li",[t._v("修正子类构造函数原型对象的 constructor 属性，将它指向子类构造函数")])])]),t._v(" "),a("li",[t._v("优点:\n"),a("ul",[a("li",[t._v("只调用了一次父类构造函数，只创建了一份父类属性")]),t._v(" "),a("li",[t._v("子类可以用到父类原型链上的属性和方法")]),t._v(" "),a("li",[t._v("能够正常的使用 instanceOf 和 isPrototypeOf 方法")])])]),t._v(" "),a("li",[t._v("附 - Object.create()\n"),a("ul",[a("li",[t._v("Object.create(proto, propertiesObject)\n"),a("ul",[a("li",[t._v("参数一，需要指定的原型对象")]),t._v(" "),a("li",[t._v("参数二，可选参数，给新对象自身添加新属性以及描述器")])])])])])]),t._v(" "),a("h3",{attrs:{id:"原型式继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型式继承","aria-hidden":"true"}},[t._v("#")]),t._v(" 原型式继承")]),t._v(" "),a("blockquote",[a("p",[t._v("es5 前模拟实现 object.create 的方法")])]),t._v(" "),a("ul",[a("li",[t._v("方法:")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("ul",[a("li",[t._v("优点:\n"),a("ul",[a("li",[t._v("再不用创建构造函数的情况下，实现了原型链继承")])])]),t._v(" "),a("li",[t._v("缺点\n"),a("ul",[a("li",[t._v("一些引用数据操作的时候会出问题，两个实例会公用继承实例的引用数据类")]),t._v(" "),a("li",[t._v("谨慎定义方法，以免定义方法也继承对象原型的方法重名")]),t._v(" "),a("li",[t._v("无法直接给父级构造函数使用参数")])])])]),t._v(" "),a("h3",{attrs:{id:"寄生式继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#寄生式继承","aria-hidden":"true"}},[t._v("#")]),t._v(" 寄生式继承")]),t._v(" "),a("blockquote",[a("p",[t._v("es5 前模拟实现 object.create + 自定义内容")])]),t._v(" "),a("ul",[a("li",[t._v("方法: 在原型式继承的基础上,再封装一层")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createAnother")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("original")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" clone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("original"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过调用 Object.create() 函数创建一个新对象")]),t._v("\nclone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以某种方式来增强对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" clone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回这个对象 }")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"混入方式继承多个对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#混入方式继承多个对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 混入方式继承多个对象")]),t._v(" "),a("blockquote",[a("p",[t._v("使用 Object.assign 使一个子类继承多个父类的对象和方法")])]),t._v(" "),a("ul",[a("li",[t._v("方法:")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Child")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Parent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OtherParent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OtherParent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("ul",[a("li",[t._v("Child 内使用了 call/apply 来复制构造函数 OtherParent 上的属性和方法")]),t._v(" "),a("li",[t._v("将 child 的原型对象指向通过 Object.create 创建的对象,即是父类构造函数的 prototype 对象")]),t._v(" "),a("li",[t._v("Child.prototype 使用 Object.assign()浅拷贝 OtherParent.prototype 上的属性和方法")]),t._v(" "),a("li",[t._v("修正子类构造函数原型对象的 constructor 属性，将它指向子类构造函数")])]),t._v(" "),a("h3",{attrs:{id:"class-继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-继承","aria-hidden":"true"}},[t._v("#")]),t._v(" class 继承")]),t._v(" "),a("blockquote",[a("p",[t._v("extends + super")])]),t._v(" "),a("p",[t._v("方法:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'boy'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("ul",[a("li",[t._v("特点\n"),a("ul",[a("li",[t._v("主要是依赖extends关键字来实现继承，且继承的效果类似于寄生组合继承")]),t._v(" "),a("li",[t._v("使用了extends实现继承不一定要constructor和super，因为没有的话会默认产生并调用它们")]),t._v(" "),a("li",[t._v("extends后面接着的目标不一定是class，只要是个有prototype属性的函数就可以了")])])]),t._v(" "),a("li",[t._v("super相关：\n"),a("ul",[a("li",[t._v("在实现继承时，如果子类中有constructor函数，必须得在constructor中调用一下super函数，因为它就是用来产生实例this的。")]),t._v(" "),a("li",[t._v("super有两种调用方式：当成函数调用和当成对象来调用。")]),t._v(" "),a("li",[t._v("super当成函数调用时，代表父类的构造函数，且返回的是子类的实例，也就是此时super内部的this指向子类。在子类的constructor中super()就相当- 于是Parent.constructor.call(this)")]),t._v(" "),a("li",[t._v("super当成对象调用时，普通函数中super对象指向父类的原型对象，静态函数中指向父类。且通过super调用父类的方法时，super会绑定子类的this，- 就相当于是Parent.prototype.fn.call(this)。")]),t._v(" "),a("li",[t._v("在子类的普通函数中super对象指向父类的原型对象")]),t._v(" "),a("li",[t._v("在子类的静态方法中super对象指向父类")])])]),t._v(" "),a("li",[t._v("与ES5区别\n"),a("ul",[a("li",[t._v("在ES5中的继承(例如构造继承、寄生组合继承) ，实质上是先创造子类的实例对象this，然后再将父类的属性和方法添加到this上(使用的是Parent.- call(this))。")]),t._v(" "),a("li",[t._v("而在ES6中却不是这样的，它实质是先创造父类的实例对象this(也就是使用super())，然后再用子类的构造函数去修改this。")])])])]),t._v(" "),a("h3",{attrs:{id:"附"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附","aria-hidden":"true"}},[t._v("#")]),t._v(" 附")]),t._v(" "),a("ul",[a("li",[t._v("instanceof 运算符\n"),a("ul",[a("li",[t._v("作用: 用于检测构造函数的 prototype 属性是否出现在某个实例对象的原型链上")]),t._v(" "),a("li",[t._v("用法: 实例对象 a instanceof 构造函数 B")])])]),t._v(" "),a("li",[t._v("isPrototypeOf()\n"),a("ul",[a("li",[t._v("来源: 属于 Object.prototype 上的方法,作用同上")]),t._v(" "),a("li",[t._v("用法: 构造函数 B.prototype.isPrototypeOf(实例对象 a)")])])])])])},[],!1,null,null,null);s.default=e.exports}}]);